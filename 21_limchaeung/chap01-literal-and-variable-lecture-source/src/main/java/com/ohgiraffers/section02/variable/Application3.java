package com.ohgiraffers.section02.variable;
//    자바 Ctrl + Shift + 라인 드래그 후 선택한 라인만 주석됨
//    자바 Shift + 엠터 : 그냥 라인 내려감
//    Alt _드래그 하면 세로로 라인 복사함
//    Ctrl + Shift + 방향키 현재 라인 및드래그한 것 이동
//    Alt + E 상태바 이동
//    Shift 2번 클릭 전체 검색
//    soutv 입력 + Tab 변수가 있을때 자동 완성

/*
 *  변수의 명명규칙
 *   1. 컴파일 에러를 발생시키는 규칙
 * 	  1-1. 동일한 범위 내에서 동일한 변수명을 가질 수 없다.
 *    1-2. 예약어는 사용이 불가능하다. (자바에서 미리 사용하겠다고 compiler와 약속한 키워드들을 예약어라고 한다.)
 *    1-3. 변수명은 대/소문자를 구분한다. (자바는 대/소문자를 엄격하게 구분하는 언어이다.)
 *    1-4. 변수명은 숫자로 시작할 수 없다. (시작만 할 수 없고 숫자를 섞어서 사용하는 것은 가능하다.)
 *    1-5. 특수 기호는 '_'와 '$'만 사용 가능하다. (따라서 공백을 사용할 수 없다.)
 *   2. 컴파일 에러를 발생시키지는 않지만 개발자들끼리의 암묵적인 규칙
 *    2-1. 변수명의 길이 제한은 없다.(하지만 적당히 해야겠지?)
 *    2-2. 변수명이 합성어로 이루어진 경우 첫 단어는 소문자, 두 번째 시작 단어는 대문자로 시작한다. (camel-case)
 *    2-3. 단어와 단어 사이의 연결을 언더스코어(_)로 하지 않는다. (타 언어 네이밍 규칙이다.)
 *    2-4. 한글로 변수명을 짓는 것이 가능하지만, 권장하지 않는다. (한글을 취급하는 다양한 방식들이 존재하기 때문에 에러를 유발할 수 있다.)
 *    2-5. 변수 안에 저장된 값이 어떤 의미를 가지는지 명확하게 표현하도록 한다.
 *    2-6. 전형적인 변수 이름이 있다면 가급적 사용하도록 한다.
 *    2-7. 명사형으로 작성할 수 있도록 한다.
 *    2-8. boolean 형은 의문문으로 가급적 긍정형태로 네이밍한다.
 * */
public class Application3 {
    public static void main(String[] args) {
        /*변수명의 명명 규칙
        * 변수의 이름을 지을 때 아무렇게 짓는 것이 아닌 정해진 규칙이 있다.
        * 실무적으로는 굉장히 중요하기 때문에 반드시 숙지해야 하고, 또한 규칙에 맞는 올바른 변수명을 짓는 것이 좋은 프로그래밍이다.*/

    //  { }의 뜻 scope(스코프)
    int age = 20;
//        int age = 20; // 동일한 변수명을 가지면 에러
//        int true = 1; // 예약어 선언 사용 불가

        // 대소문자를 구분
        int Age  = 20;
        int True = 10;

//        int 1age = 20; // 숫자로 시작해서 에러발생
//        int _age = 20; // _ 언더스코어 사용 가능하다 처음 중간 끝도 가능
//        int g$he = 20; // $ 도 어느 위치든 사용 가능
        
        // 합성어 일경우 첫단어는 소문자, 두번째 시작 단어는 대문자로 시작 
//        int maxAge = 20;
          int minAge = 10;
          
          String user_name; // 정석
          String userName; // 정석
        
        int 나이; // (한글)권장하지는 않는다
        
        String s; // s 변수가 어떤 의미인지 파악하기 힘듬
        String name; // 문자열 형태의 이름으로 파악됨
        
        int sum = 0;
        int max = 10;
        int min = 0;
        int count = 1;
        
        String goHome; // 명사로 입력
        // 메소드인경우 동사로 입력 
        
        boolean isAlive = true;
        boolean isDead = false; // 부정형보다 위에 긍정형으로






    }
}
